# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/focal64"
  

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"
  config.vm.network "public_network", bridge: "enp3s0", ip: "192.168.18.66", netmask: "255.255.255.0", gateway: "192.168.18.1"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.

  # useradd -m -s /bin/bash -p $(echo 'z0phermero.$' | openssl passwd -1 -stdin) humancero && sudo usermod -aG wheel humancero
  config.vm.provision "shell", inline: <<-SHELL
    apt update
    apt install -y git zsh ncdu htop openssl neovim
    # Crear usuario humancero con contraseÃ±a z0phermero.$
    useradd -m -s /bin/bash humancero
    echo "humancero:z0phermero.$" | chpasswd
    # Convirtiendo este usuario en administrador
    usermod -aG sudo humancero
    sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
    systemctl restart sshd

    
  SHELL

#   config.vm.network "public_network", ip: "192.168.18.58", bridge: "en0: Wi-Fi (AirPort)", auto_config: false
# config.vm.provision "shell", inline: <<-SHELL
#     mkdir -p /home/humancero/.ssh
#     chmod 700 /home/humancero/.ssh
#     echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDd8CzEQOgJffjc7Vf33aOu3pO4x6nn4UeRkU6PL9XZT/e/0GwnrRdRfFXoMsPccNe/Yc2QeNKGj/RiHq3X0twUC1mCzByEoYz2Qh8//mUKbNExLROmKImSaGh9XfT7T1rZuyzKocdO8Gg49cxCiJisH2a1+zj3XLEes1OU/dZFRBhslYonZYw2eA2HRElUsbrhDXGpsfOpgdXtv0nIOIWVj92o+ngYzY1HK40F1HptLMPC/kKjJe5o5D8W5PDP7VHheQ2TrU7V3qgdbpBo6bx4U6BtbUcV9E6N+OZ7SijQMW52/mV7J3ksWUfiy+U4ob6XJj5h1aKMWT1Ro5+RyA6P10w2hSKZWe7N/SRFLRUnCK7V+NVtG3qfKu0v/xt/7bGwOY8ilp0TmwnHfb/mT9e0I9qs32MfyHsXTsSmz4Vw4YTkI1ZjvR66L7Lssn+/pp2DTtWq3vJKgnrh7rpzHy89YwYfW8ZOV1lC9Ewu47TfhJL7W8nDQ2s4V4sNyrdwzZGM0OGJLQ2+9mPi0mfnrUa8= user@host" > /home/humancero/.ssh/authorized_keys
#     chmod 600 /home/humancero/.ssh/authorized_keys
#     chown -R humancero:humancero /home/humancero/.ssh
# SHELL

end
